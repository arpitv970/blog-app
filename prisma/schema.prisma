// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  password  String // Store hashed passwords
  blogs     Blog[] // Blogs written by the user
  bookmarks Bookmark[] // Blogs bookmarked by the user
  comments  Comment[] // Comments made by the user
  likes     Like[] // Likes made by the user
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Blog {
  id            Int        @id @default(autoincrement())
  title         String
  content       String
  authorId      Int
  author        User       @relation(fields: [authorId], references: [id])
  likes         Like[] // Users who liked the blog
  bookmarks     Bookmark[] // Users who bookmarked the blog
  comments      Comment[] // List of comments
  likeCount     Int        @default(0) // Number of likes
  bookmarkCount Int        @default(0) // Number of bookmarks
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Like {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])
  blogId Int
  blog   Blog @relation(fields: [blogId], references: [id])

  @@unique([userId, blogId]) // Ensures a user can like a blog only once
}

model Bookmark {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])
  blogId Int
  blog   Blog @relation(fields: [blogId], references: [id])

  @@unique([userId, blogId]) // Ensures a user can bookmark a blog only once
}
